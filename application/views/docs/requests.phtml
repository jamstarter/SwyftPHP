<a href='/docs'>Back to Documentation</a>
<h1>Handling Requests</h1>
<p>Request handling makes it easy for you to interact with $_REQUEST, $_GET and $_POST arrays. Use the following methods to set and retrieve request parameters.</p>
<h2>Retrieve Parameters</h2>
<p>You can easily retrieve params from $_GET,$_POST and $_REQUEST arrays with the following methods (shown used within a controller method)</p>
Retrieve $_GET,$_REQUEST, and $_POST
<xmp>$this->request->getParams();</xmp>
<xmp>$this->request->getParam('foo');</xmp>
<br>Retrieve $_POST
<xmp>$this->request->getPosts();</xmp>
<xmp>$this->request->getPost('foo');</xmp>
<Br>Retrieve $_GET & $_REQUEST
<xmp>$this->request->getRequests();</xmp>
<xmp>$this->request->getRequest('foo');</xmp>
<h2>Setting Parameters</h2>
<p>You can set parameters with <b>setParam</b>:</p>
<xmp>$foo = $this->request->setParam('foo','bar');
echo $foo; //returns (string) "bar"</xmp>
<p>You can also set many params at once by building an associative array.</p>
<xmp>$data = array('foo'=>'bar','hello'=>'world');
$this->request->setParams($data);</xmp>
<h2>Using Outside of Controllers</h2>
<p>If you need to get request/post data outside of a controller, you can call the SRequest object.</p>
<xmp>$request = new SRequest;
$request->getParams();</xmp>
